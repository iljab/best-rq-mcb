# ################################
# Model: wav2vec2 + DNN + CTC
# Augmentation: SpecAugment
# Authors: Sung-Lin Yeh 2021, Rudolf A. Braun 2022, Titouan Parcollet 2022
# ################################

# Seed needs to be set at top of yaml, before objects with parameters are made
seed: 2001
__set_seed: !apply:torch.manual_seed [!ref <seed>]
experiment_name: !PLACEHOLDER
output_folder: !ref results/ft/ft_libri/<experiment_name>/<seed>
output_wer_folder: !ref <output_folder>/
dataset_folder: !PLACEHOLDER
save_folder: !ref <output_folder>/save
train_log: !ref <output_folder>/train_log.txt

wandb_entity: !PLACEHOLDER
wandb_project: !PLACEHOLDER
wandb_run_name: !ref <experiment_name>


pt_model_hub: !PLACEHOLDER
pt_model_output_dim: 512 

# Data files
data_folder: !PLACEHOLDER # e,g./path/to/LibriSpeech

# noise/ris dataset will automatically be downloaded if uncommented
# data_folder_rirs: !ref <data_folder>
train_splits: ["train-clean-100", "train-clean-360", "train-other-500"]
#train_splits: ["train-clean-100"]
dev_splits: ["dev-clean", "dev-other"]
test_splits: ["test-clean", "test-other"]
skip_prep: True
ckpt_interval_minutes: 25 # save checkpoint every N min

train_csv: !ref <dataset_folder>/train.csv
valid_csv: !ref <dataset_folder>/dev-clean.csv
test_csv:
   - !ref <dataset_folder>/test-clean.csv
   - !ref <dataset_folder>/test-other.csv
   - !ref <dataset_folder>/dev-clean.csv
   - !ref <dataset_folder>/dev-other.csv

# Training parameters
number_of_epochs: 30
lr: 0.0003
lr_wav2vec: 0.00005
auto_mix_prec: False
sample_rate: 16000
sorting: ascending
num_workers: 2

# With data_parallel batch_size is split into N jobs
# With DDP batch_size is multiplied by N jobs
# Must be 3 per GPU to fit 32GB of VRAM
batch_size: 12
test_batch_size: 8

train_dataloader_opts:
   batch_size: !ref <batch_size>
   num_workers: !ref <num_workers>
   pin_memory: True

valid_dataloader_opts:
   batch_size: !ref <batch_size>
   pin_memory: True

test_dataloader_opts:
   batch_size: !ref <test_batch_size>
   pin_memory: True

# Model parameters
dnn_activation: !new:torch.nn.LeakyReLU
dnn_neurons: 2048 # 1280
dnn_dropout: 0.15

# Outputs
output_neurons_ctc: 29  # BPE size, index(blank/eos/bos) = 0

# Decoding parameters
blank_index: 0
use_language_modelling: False
ngram_lm_path: /dev/null

#
# Functions and classes
#
epoch_counter: !new:speechbrain.utils.epoch_loop.EpochCounter
   limit: !ref <number_of_epochs>

augmentation: !new:speechbrain.lobes.augment.TimeDomainSpecAugment
   sample_rate: !ref <sample_rate>
   speeds: [95, 100, 105]

back_end_ffn: !new:speechbrain.nnet.RNN.LSTM
   input_shape: [Null, Null, !ref <pt_model_output_dim>]
   num_layers: 2
   bidirectional: True
   dropout: 0.2
   hidden_size: 1024

####################### Model parameters ###########################
# Transformer
d_model: 512
nhead: 8 # table 1 https://arxiv.org/pdf/2010.10504.pdf
num_encoder_layers: 12 # section 4.1.1
num_decoder_layers: 0
d_ffn: 2048
transformer_dropout: 0.1
activation: !name:torch.nn.GELU
output_neurons: 5000

# Feature parameters
n_fft: 400
n_mels: 80

# quantizer parameters not using though for finetunning
p_input: 320
cb_dim: 16
cb_vocab: 8192

############################## models ################################

compute_features: !new:speechbrain.lobes.features.Fbank
    sample_rate: !ref <sample_rate>
    n_fft: !ref <n_fft>
    n_mels: !ref <n_mels>

normalize: !new:speechbrain.processing.features.InputNormalization
    norm_type: global
    update_until_epoch: 4

CNN: !new:speechbrain.lobes.models.convolution.ConvolutionFrontEnd
    input_shape: (8, 10, 80)
    num_blocks: 2
    num_layers_per_block: 1
    out_channels: (128, 32)
    kernel_sizes: (3, 3)
    strides: (2, 2)
    residuals: (False, False)

Transformer: !new:speechbrain.lobes.models.transformer.TransformerASR.TransformerASR # yamllint disable-line rule:line-length
    input_size: 640
    tgt_vocab: !ref <output_neurons>
    d_model: !ref <d_model>
    nhead: !ref <nhead>
    num_encoder_layers: !ref <num_encoder_layers>
    num_decoder_layers: !ref <num_decoder_layers>
    d_ffn: !ref <d_ffn>
    dropout: !ref <transformer_dropout>
    activation: !ref <activation>
    encoder_module: conformer
    attention_type: RelPosMHAXL
    normalize_before: True
    causal: False

enc: !new:speechbrain.lobes.models.transformer.TransformerASR.EncoderWrapper
   transformer: !ref <Transformer>

# Quantizer: !new:.quantiser.RandomProjectionQuantizer
Quantizer: !new:speechbrain.nnet.quantisers.RandomProjectionQuantizer
    # projection
    input_dim: !ref <p_input>
    # codebook
    cb_dim: !ref <cb_dim>    
    cb_vocab: !ref <cb_vocab>

linear: !new:speechbrain.nnet.linear.Linear
    input_size: !ref <d_model>
    n_neurons: !ref <cb_vocab>

pt_model: !new:torch.nn.ModuleList
    - [!ref <CNN>, !ref <enc>, !ref <Quantizer>, !ref <linear>]

#####################################################################

ctc_lin: !new:speechbrain.nnet.linear.Linear
   input_size: !ref <dnn_neurons>
   n_neurons: !ref <output_neurons_ctc>

log_softmax: !new:speechbrain.nnet.activations.Softmax
   apply_log: True

ctc_cost: !name:speechbrain.nnet.losses.ctc_loss
   blank_index: !ref <blank_index>

modules:
   normalize: !ref <normalize>
   pt_model: !ref <pt_model>
   back_end_ffn: !ref <back_end_ffn>
   ctc_lin: !ref <ctc_lin>

model: !new:torch.nn.ModuleList
   - [!ref <back_end_ffn>, !ref <ctc_lin>]

model_opt_class: !name:torch.optim.AdamW
   lr: !ref <lr>
   weight_decay: 0.001

wav2vec_opt_class: !name:torch.optim.AdamW
   lr: !ref <lr_wav2vec>
   weight_decay: 0.001

lr_annealing_model: !new:speechbrain.nnet.schedulers.NewBobScheduler
   initial_value: !ref <lr>
   improvement_threshold: 0.0025
   annealing_factor: 0.8
   patient: 0

lr_annealing_wav2vec: !new:speechbrain.nnet.schedulers.NewBobScheduler
   initial_value: !ref <lr_wav2vec>
   improvement_threshold: 0.0025
   annealing_factor: 0.9
   patient: 0

checkpointer: !new:speechbrain.utils.checkpoints.Checkpointer
   checkpoints_dir: !ref <save_folder>
   recoverables:
      model: !ref <model>
      pt_model: !ref <pt_model>
      normalize: !ref <normalize>
      scheduler_model: !ref <lr_annealing_model>
      scheduler_wav2vec: !ref <lr_annealing_wav2vec>
      counter: !ref <epoch_counter>

pretrainer: !new:speechbrain.utils.parameter_transfer.Pretrainer
   collect_in: !ref <save_folder>
   loadables:
      pt_model: !ref <pt_model>
      normalize: !ref <normalize>

   paths:
      pt_model: !ref <pt_model_hub>/model.ckpt
      normalize: !ref <pt_model_hub>/normalizer.ckpt

train_logger: !new:speechbrain.utils.train_logger.WandBLogger
  initializer: !name:wandb.init
    entity: !ref <wandb_entity>
    project: !ref <wandb_project>
    name: !ref <wandb_run_name>
    reinit: True
    resume: False
    dir: results

error_rate_computer: !name:speechbrain.utils.metric_stats.ErrorRateStats

cer_computer: !name:speechbrain.utils.metric_stats.ErrorRateStats
   split_tokens: True
